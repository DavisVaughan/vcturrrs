% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map.R
\name{vec_map_strict}
\alias{vec_map_strict}
\title{Strictly apply a function to each element of a vector}
\usage{
vec_map_strict(.x, .f, ..., .ptype = list())
}
\arguments{
\item{.x}{A list or atomic vector.}

\item{.f}{A function, formula, or vector (not necessarily atomic).

If a \strong{function}, it is used as is.

If a \strong{formula}, e.g. \code{~ .x + 2}, it is converted to a function. There
are three ways to refer to the arguments:
\itemize{
\item For a single argument function, use \code{.}
\item For a two argument function, use \code{.x} and \code{.y}
\item For more arguments, use \code{..1}, \code{..2}, \code{..3} etc
}

This syntax allows you to create very compact anonymous functions.

If \strong{character vector}, \strong{numeric vector}, or \strong{list}, it is
converted to an extractor function. Character vectors index by
name and numeric vectors index by position; use a list to index
by position and name at different levels. If a component is not
present, the value of \code{.default} will be returned.}

\item{...}{Additional arguments passed on to the mapped function.}

\item{.ptype}{A prototype for the output container.}
}
\description{
\code{vec_map_strict()} is \code{vec_map()}, but without the common type determination.
You \emph{must} supply a \code{.ptype} for \code{vec_map_strict()}, and \code{NULL} is not
allowed.
}
